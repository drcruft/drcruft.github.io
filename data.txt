```python
from typing import Type
import time
import splunklib.client as client
from pydantic import BaseModel, Field
from crewai.tools import BaseTool   # correct import for BaseTool :contentReference[oaicite:0]{index=0}

class SplunkSearchArgs(BaseModel):
    """Schema for Splunk query inputs."""
    query: str = Field(..., description="The SPL query to run")
    earliest: str = Field("-15m", description="Earliest time for the search")
    latest: str = Field("now", description="Latest time for the search")

class SplunkSearchTool(BaseTool):
    name: str = "splunk_search"
    description: str = "Execute a Splunk SPL query and return JSON results."
    args_schema: Type[SplunkSearchArgs] = SplunkSearchArgs

    def __init__(self, host: str, port: int, username: str, password: str):
        super().__init__()
        self.service = client.connect(
            host=host, port=port, username=username, password=password
        )

    def _run(self, query: str, earliest: str = "-15m", latest: str = "now") -> str:
        job = self.service.jobs.create(
            query, earliest_time=earliest, latest_time=latest
        )
        while not job.is_done():
            time.sleep(0.5)
        return job.results(output_mode="json").read()


```