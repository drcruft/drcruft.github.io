```python

from openai import OpenAI
from crewai_tools import Tool

# 1) Define your function schema
classify_intent_definition = {
    "name": "classify_intent",
    "description": "Classify the user’s prompt into one of: 'chat', 'splunk_query', 'other_tool'.",
    "parameters": {
        "type": "object",
        "properties": {
            "intent": {
                "type": "string",
                "enum": ["chat", "splunk_query", "other_tool"]
            },
            "confidence": {
                "type": "number",
                "description": "Model’s confidence from 0.0 to 1.0"
            }
        },
        "required": ["intent", "confidence"]
    }
}

openai = OpenAI()

# 2) Wrap it in a CrewAI Tool
intent_tool = Tool(
    name="classify_intent",
    description="Returns JSON {intent, confidence}.",
    func=lambda prompt: openai.chat.completions.create(
        model="gpt-4o-mini",
        temperature=0.0,
        messages=[
            {"role": "system", "content":
             "You’re an intent classification service. Always respond via the `classify_intent` function."},
            # (Optionally insert your few-shot examples here)
            {"role": "user", "content": prompt}
        ],
        functions=[classify_intent_definition],   # ← your function schema goes here
        function_call={"name": "classify_intent"}  # ← force the model to use it
    ).choices[0].message.function_call.arguments
)

# 3) Use it
result = intent_tool.run("index=_internal | stats count by host")
print(result)
# -> {'intent': 'splunk_query', 'confidence': 0.99}



```